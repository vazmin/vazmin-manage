<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.vazmin.manage.component.dao.system.MenuInfoMapper">

    <sql id="tableName">menu_info</sql>

    <sql id="columns_no_id">
        parent_id, code, value, order_number, pkg_name, 
        path, enable, discard, common
    </sql>

    <sql id="columns">
        id, <include refid="columns_no_id"/>
    </sql>

    <sql id="columns_join">
        a.id, a.parent_id, a.code, a.value, a.order_number, 
        a.pkg_name, a.path, a.enable, a.discard, a.common
    </sql>

    <sql id="likeWhere" databaseId="mysql">
    </sql>

    <sql id="dynamicWhere">
        <where>
            <if test="parentId not in {null, ''}">a.parent_id = #{parentId}</if>
            <if test="code not in {null, ''}">AND a.code = #{code}</if>
            <if test="value not in {null, ''}">AND a.value = #{value}</if>
            <if test="orderNumber not in {null, ''}">AND a.order_number = #{orderNumber}</if>
            <if test="pkgName not in {null, ''}">AND a.pkg_name = #{pkgName}</if>
            <if test="path not in {null, ''}">AND a.path = #{path}</if>
            <if test="enable not in {null, ''}">AND a.enable = #{enable}</if>
            <if test="discard != null">AND a.discard = #{discard}</if>
            <if test="common != null">AND a.common = #{common}</if>
            <include refid="likeWhere"/>
        </where>
    </sql>

    <select id="get" resultType="MenuInfo" parameterType="long">
        SELECT <include refid="columns_join"/>
        FROM <include refid="tableName"/> a
        WHERE a.id = #{id}
    </select>

    <select id="getByDynamicWhere" resultType="MenuInfo">
        SELECT <include refid="columns_join"/>
        FROM <include refid="tableName"/> a
        <include refid="dynamicWhere"/>
    </select>

    <select id="getCount" resultType="int">
        SELECT COUNT(1)
        FROM <include refid="tableName"/> a
        <include refid="dynamicWhere"/>
    </select>

    <select id="getList" resultType="MenuInfo">
        SELECT <include refid="columns_join"/>
        FROM <include refid="tableName"/> a
        <include refid="dynamicWhere"/>
        <if test="fullordering not in {null, ''}">
            ORDER BY ${fullordering}
        </if>
    </select>

    <insert id="insert" parameterType="MenuInfo" useGeneratedKeys="true"
            keyProperty="id" >
        INSERT IGNORE INTO <include refid="tableName"/>
        (<include refid="columns_no_id"/>)
        VALUES
        (
        #{parentId}, #{code}, #{value}, #{orderNumber}, #{pkgName}, 
        #{path}, #{enable}, #{discard}, #{common}
        )
    </insert>

    <update id="update" parameterType="MenuInfo">
        UPDATE <include refid="tableName"/>
        <set>
            <if test="parentId != null">parent_id=#{parentId}, </if>
            <if test="code not in {null, ''}">code=#{code}, </if>
            <if test="value not in {null, ''}">value=#{value}, </if>
            <if test="orderNumber != null">order_number=#{orderNumber}, </if>
            <if test="pkgName not in {null, ''}">pkg_name=#{pkgName}, </if>
            <if test="path not in {null, ''}">path=#{path}, </if>
            <if test="enable != null">enable=#{enable}, </if>
            <if test="discard != null">discard=#{discard},</if>
            <if test="common != null">common=#{common}</if>
        </set>
        WHERE id = #{id}
    </update>

    <select id="getByPkgName" resultType="MenuInfo" parameterType="String">
        SELECT <include refid="columns"/>
        FROM <include refid="tableName"/>
        WHERE pkg_name = #{pkgName}
    </select>

    <update id="updateDiscard" parameterType="MenuInfo">
        UPDATE <include refid="tableName"/>
        SET discard = #{discard}
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tableName"/> WHERE id = #{id}
    </delete>

    <delete id="batchDelete">
        DELETE FROM <include refid="tableName"/>
        WHERE id IN
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>
